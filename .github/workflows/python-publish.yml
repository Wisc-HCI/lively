# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  deploy:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools_rust wheel auditwheel twine
    - name: Build (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        python setup.py bdist_wheel --universal
    - name: Build (Linux, Python 3.6)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.6'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m'
        build-requirements: 'setuptools wheel setuptools_rust'
        pre-build-command: '"curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"'
    - name: Build (Linux, Python 3.7)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.7'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp37-cp37m'
        build-requirements: 'setuptools wheel setuptools_rust'
        pre-build-command: '"curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"'  
    - name: Build (Linux, Python 3.8)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp38-cp38m'
        build-requirements: 'setuptools wheel setuptools_rust'
        pre-build-command: '"curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"'
    - name: Build (Linux, Python 3.9)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp39-cp39m'
        build-requirements: 'setuptools wheel setuptools_rust'
        pre-build-command: '"curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"'    
    - name: Publish Python distribution to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
      
