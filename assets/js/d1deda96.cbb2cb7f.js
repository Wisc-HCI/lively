"use strict";(self.webpackChunklively_documentation=self.webpackChunklively_documentation||[]).push([[6541],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,f=u["".concat(s,".").concat(c)]||u[c]||d[c]||o;return a?n.createElement(f,l(l({ref:t},m),{},{components:a})):n.createElement(f,l({ref:t},m))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7462),r=a(7294),o=a(6010),l=a(2389),i=a(7392),s=a(7094),p=a(2466);const m="tabList__CuJ",u="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:l,values:d,groupId:c,className:f}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,i.l)(b,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===l?l:l??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[g,T]=(0,r.useState)(v),I=[],{blockElementScrollPositionUntilNextRender:w}=(0,p.o5)();if(null!=c){const e=y[c];null!=e&&e!==g&&b.some((t=>t.value===e))&&T(e)}const j=e=>{const t=e.currentTarget,a=I.indexOf(t),n=b[a].value;n!==g&&(w(t),T(n),null!=c&&N(c,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const a=I.indexOf(e.currentTarget)+1;t=I[a]??I[0];break}case"ArrowLeft":{const a=I.indexOf(e.currentTarget)-1;t=I[a]??I[I.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},f)},b.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>I.push(e),onKeyDown:x,onClick:j},l,{className:(0,o.Z)("tabs__item",u,l?.className,{"tabs__item--active":g===t})}),a??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function c(e){const t=(0,l.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},8743:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),o=a(5488),l=a(5162);const i={},s="State",p={unversionedId:"API/state",id:"API/state",title:"State",description:"The State object is the response back after calling solve.",source:"@site/docs/API/state.mdx",sourceDirName:"API",slug:"/API/state",permalink:"/lively/docs/API/state",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Capsule",permalink:"/lively/docs/API/Shapes/capsule"},next:{title:"Goals",permalink:"/lively/docs/API/Goals/goal"}},m={},u=[{value:"Import",id:"import",level:2},{value:"Declaration Example",id:"declaration-example",level:2}],d={toc:u};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"state"},"State"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"State")," object is the response back after calling ",(0,r.kt)("a",{parentName:"p",href:"Solver/Methods/solve"},(0,r.kt)("inlineCode",{parentName:"a"},"solve")),".\nIt contains the state of the robot in terms of joint and frames, as well as some diagnostic information regarding ",(0,r.kt)("a",{parentName:"p",href:"../API/Info/proximityInfo"},(0,r.kt)("inlineCode",{parentName:"a"},"proximity"))," of various ",(0,r.kt)("a",{parentName:"p",href:"../API/Shapes/"},(0,r.kt)("inlineCode",{parentName:"a"},"shapes"))," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"center_of_mass")," of the robot. "),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"For ",(0,r.kt)("a",{parentName:"p",href:"/lively/docs/API/Solver/initialization"},(0,r.kt)("inlineCode",{parentName:"a"},"Solver initialization")),", only ",(0,r.kt)("inlineCode",{parentName:"p"},"origin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"joints")," parameters have to be defined if user decided to provide a ",(0,r.kt)("inlineCode",{parentName:"p"},"State"),"object to the ",(0,r.kt)("inlineCode",{parentName:"p"},"initial_state")," parameter.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"origin")),(0,r.kt)("td",{parentName:"tr",align:null},"isometry consisted of translation and rotation"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"The transform of the root of the robot. This data is also included in ",(0,r.kt)("inlineCode",{parentName:"td"},"frames"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"joints")),(0,r.kt)("td",{parentName:"tr",align:null},"lookup table(string, float)"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"A lookup table of the joint values for each movable joint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"frames")),(0,r.kt)("td",{parentName:"tr",align:null},"lookup table(string, ",(0,r.kt)("a",{parentName:"td",href:"../API/Info/transformInfo"},(0,r.kt)("inlineCode",{parentName:"a"},"TransformInfo")),")"),(0,r.kt)("td",{parentName:"tr",align:null},"can be ignored for ",(0,r.kt)("a",{parentName:"td",href:"/lively/docs/API/Solver/initialization"},(0,r.kt)("inlineCode",{parentName:"a"},"Solver initialization"))),(0,r.kt)("td",{parentName:"tr",align:null},"A lookup table of each link\u2019s position in both world and local coordinates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"proximity")),(0,r.kt)("td",{parentName:"tr",align:null},"list of ",(0,r.kt)("a",{parentName:"td",href:"../API/Info/proximityInfo"},(0,r.kt)("inlineCode",{parentName:"a"},"ProximityInfo"))),(0,r.kt)("td",{parentName:"tr",align:null},"can be ignored for ",(0,r.kt)("a",{parentName:"td",href:"/lively/docs/API/Solver/initialization"},(0,r.kt)("inlineCode",{parentName:"a"},"Solver initialization"))),(0,r.kt)("td",{parentName:"tr",align:null},"A vector of data representing pairwise proximity between the robot\u2019s parts and other robot parts and the environment. Each entry contains distance, as well as the closest points between the pair of colliders")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"center_of_mass")),(0,r.kt)("td",{parentName:"tr",align:null},"list of float"),(0,r.kt)("td",{parentName:"tr",align:null},"can be ignored for ",(0,r.kt)("a",{parentName:"td",href:"/lively/docs/API/Solver/initialization"},(0,r.kt)("inlineCode",{parentName:"a"},"Solver initialization"))),(0,r.kt)("td",{parentName:"tr",align:null},"A 3-vector representing the center of mass of the robot in the world frame")))),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There is no need to import for Javascript.")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"  from lively import State\n"))),(0,r.kt)(l.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"  use lively::utils::state::State;\n")))),(0,r.kt)("h2",{id:"declaration-example"},"Declaration Example"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'  let state = {origin:{translation:[0,0,0],rotation:[1,0,0,0]},joints:{"panda_joint1":0.0,"panda_joint2":0.0}}\n'))),(0,r.kt)(l.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'  state = State(origin=Transform.identity(),joints={"panda_joint1":0.0,"panda_joint2":0.0})\n'))),(0,r.kt)(l.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"}," let iso = Isometry3::from_parts(\n      Translation3::new(\n          0.6497281999999998,\n          -0.24972819999999987,\n          0.050000000000000044,\n      ),\n      UnitQuaternion::from_quaternion(Quaternion::new(\n          0.0,\n          0.0,\n          -0.7069999677447771,\n          0.7072135784958345,\n      )),\n  );\n  let mut joints: HashMap<String, f64> = HashMap::new();\n  let mut frames: HashMap<String,TransformInfo> = HashMap::new();\n  let mut proximities = Vec::new();\n  let mut center_of_mass: Vector3<f64>::new();\n  let state = State::new(iso, joints, frames, proximities, center_of_mass);\n")))))}c.isMDXComponent=!0}}]);