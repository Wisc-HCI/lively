"use strict";(self.webpackChunklively_documentation=self.webpackChunklively_documentation||[]).push([[5098],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>v});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=u(t),p=o,v=d["".concat(s,".").concat(p)]||d[p]||m[p]||l;return t?a.createElement(v,i(i({ref:n},c),{},{components:t})):a.createElement(v,i({ref:n},c))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=p;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[d]="string"==typeof e?e:o,i[1]=r;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(67294),o=t(86010);const l="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(l,i),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>S});var a=t(83117),o=t(67294),l=t(86010),i=t(12466),r=t(16550),s=t(91980),u=t(67392),c=t(50012);function d(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function m(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function v(e){let{queryString:n=!1,groupId:t}=e;const a=(0,r.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(l),(0,o.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,l=m(e),[i,r]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[s,u]=v({queryString:t,groupId:a}),[d,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,c.Nk)(t);return[a,(0,o.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:a}),h=(()=>{const e=s??d;return p({value:e,tabValues:l})?e:null})();(0,o.useLayoutEffect)((()=>{h&&r(h)}),[h]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);r(e),u(e),b(e)}),[u,b,l]),tabValues:l}}var h=t(72389);const f="tabList__CuJ",y="tabItem_LNqP";function g(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const n=e.currentTarget,t=c.indexOf(n),a=u[t].value;a!==r&&(d(n),s(a))},p=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,key:n,ref:e=>c.push(e),onKeyDown:p,onClick:m},i,{className:(0,l.Z)("tabs__item",y,i?.className,{"tabs__item--active":r===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:a}=e;if(t=Array.isArray(t)?t:[t],n){const e=t.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},t.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function w(e){const n=b(e);return o.createElement("div",{className:(0,l.Z)("tabs-container",f)},o.createElement(g,(0,a.Z)({},e,n)),o.createElement(k,(0,a.Z)({},e,n)))}function S(e){const n=(0,h.Z)();return o.createElement(w,(0,a.Z)({key:String(n)},e))}},43506:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>u,toc:()=>d});var a=t(83117),o=(t(67294),t(3905)),l=t(74866),i=t(85162);const r={},s="Advanced Initialization",u={unversionedId:"Tutorials/advanced_initialization",id:"Tutorials/advanced_initialization",title:"Advanced Initialization",description:"Since Lively is still in beta, the design is subject to change and should not be considered final!",source:"@site/docs/Tutorials/advanced_initialization.mdx",sourceDirName:"Tutorials",slug:"/Tutorials/advanced_initialization",permalink:"/lively/docs/Tutorials/advanced_initialization",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"Basic Initialization",permalink:"/lively/docs/Tutorials/initialization"},next:{title:"Solving",permalink:"/lively/docs/Tutorials/solving"}},c={},d=[],m={toc:d};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"advanced-initialization"},"Advanced Initialization"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Since Lively is still in beta, the design is subject to change and should not be considered final!")),(0,o.kt)("p",null,"We have also created examples in Javascript, Python, and Rust for Advanced Initialization. You can find the file by clicking the links in the table down below."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Language"),(0,o.kt)("th",{parentName:"tr",align:null},"Path"),(0,o.kt)("th",{parentName:"tr",align:null},"Command to run the example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Rust"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/Wisc-HCI/lively/blob/master/examples/rust_examples/advanced_initialization_example.rs"},"link")),(0,o.kt)("td",{parentName:"tr",align:null},"cargo run --package lively --example advanced_initialization_example")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Python"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/Wisc-HCI/lively/blob/master/examples/python_examples/advanced_initialization_example.ipynb"},"link")),(0,o.kt)("td",{parentName:"tr",align:null},"run in the Jupyter Notebook")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Javascript"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/Wisc-HCI/lively/tree/master/examples/js_examples/advanced_initialization"},"link")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"yarn build"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"yarn dev"))))),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"jsx",label:"Live",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function InitializationExample(props) {\n  const [livelySolver, setLivelySolver] = useState(null);\n  const [robotState, setRobotState] = useState(null);\n  const [robot, setRobot] = useState("panda");\n\n  const initialRootBounds = [ // An exmaple of root bounds\n    { value: 0.0, delta: 0.0 },\n    { value: 0.25, delta: 0.0 },\n    { value: 0.5, delta: 0.0 },\n    { value: 0.0, delta: 0.0 },\n    { value: 0.0, delta: 0.0 },\n    { value: 0.0, delta: 0.0 },\n  ];\n\n  const initialObjectives = {\n    smoothness: {\n      // An example objective (smoothness macro)\n      name: "MySmoothnessObjective",\n      type: "SmoothnessMacro",\n      weight: 5,\n    },\n    collision: {\n      // An example objective (collision avoidance)\n      name: "MyCollisionDetection",\n      type: "CollisionAvoidance",\n      weight: 5,\n    },\n    jointLimit: {\n      // An example objective (joint limit)\n      name: "MyJointLimit",\n      type: "JointLimits",\n      weight: 5,\n    },\n  };\n  const initialEnvShapes = [\n    {\n      type: "Cylinder", // The Cylinder here is an example of static environmental shape. This shape will be not able to be moved or deleted.\n      name: "pill",\n      frame: "world",\n      physical: true,\n      length: 0.3,\n      radius: 0.2,\n      localTransform: {\n        translation: [-0.8, 0.0, 0.1],\n        rotation: [1.0, 0.0, 0.0, 0.0],\n      }, // [x, y, z, w] ordering for quaternion\n    },\n  ];\n\n  let collision_settings = {// This is an example of customized collision_settings\n    dMax: 0.1,\n    r: 0.0,\n    aMax: 2.0,\n    timeBudget: 100,\n    timed: false,\n  }; \n\n  useEffect(() => {\n    /* \n      Given that we are showing this example in a declarative\n      react context, we need to use the useEffect hook to execute\n      imperative (sequential) code. That means that if you are\n      writing standard javascript, your code will look like the\n      contents of the "init" function.\n      * Note also that the "init" function is async. This is\n      because the lively library is built on web assembly (WASM),\n      which needs to be imported asynchronously.\n      */\n\n    // Instantiate a new solver\n    const newSolver = new lively.Solver(\n      urdfs[robot], // The urdf of the robot\n      initialObjectives, // objectives\n      initialRootBounds,\n      initialEnvShapes, // environmental shapes\n      null, // initial_state\n      null, // max_retries\n      null, // max_iterations\n      collision_settings // customized collision settings\n    );\n\n    // Run collision normalization\n    newSolver.computeAverageDistanceTable();\n\n    // Assign the solver to the value\n    setLivelySolver(newSolver);\n\n    // Run solve to get a solved state\n    const newState = newSolver.solve({}, {}, 0.0);\n    // Update the solver\'s current state\n    setRobotState(newState);\n\n    return () => {\n      // Provide a function to clear previous values\n      setLivelySolver(null);\n      setRobotState(null);\n    };\n  }, [robot]);\n\n  return (\n    <div>\n      <Button active={robot === "panda"} onClick={() => setRobot("panda")}>\n        Panda\n      </Button>\n      <Button active={robot === "ur3e"} onClick={() => setRobot("ur3e")}>\n        UR3e\n      </Button>\n      <RobotViewer\n        state={robotState}\n        links={livelySolver ? livelySolver.links : []}\n      />\n      <Tree label="state" data={robotState} />\n    </div>\n  );\n}\n'))),(0,o.kt)(i.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { panda, ur3e } from './urdfs.js';\nimport { Solver } from '@people_and_robots/lively';\n\nconst initialRootBounds = [\n  // An exmaple of root bounds\n  { value: 0.0, delta: 0.0 },\n  { value: 0.25, delta: 0.0 },\n  { value: 0.5, delta: 0.0 },\n  { value: 0.0, delta: 0.0 },\n  { value: 0.0, delta: 0.0 },\n  { value: 0.0, delta: 0.0 },\n];\n\nconst initialObjectives = {\n  smoothness: {\n    // An example objective (smoothness macro)\n    name: 'MySmoothnessObjective',\n    type: 'SmoothnessMacro',\n    weight: 5,\n  },\n  collision: {\n    // An example objective (collision avoidance)\n    name: 'MyCollisionDetection',\n    type: 'CollisionAvoidance',\n    weight: 5,\n  },\n  jointLimit: {\n    // An example objective (joint limit)\n    name: 'MyJointLimit',\n    type: 'JointLimits',\n    weight: 5,\n  },\n};\n\nconst initialEnvShapes = [\n  {\n    type: 'Cylinder', // The Cylinder here is an example of static environmental shape. This shape will be not able to be moved or deleted.\n    name: 'pill',\n    frame: 'world',\n    physical: true,\n    length: 0.3,\n    radius: 0.2,\n    localTransform: {\n      translation: [-0.8, 0.0, 0.1],\n      rotation: [1.0, 0.0, 0.0, 0.0],\n    }, // [x, y, z, w] ordering for quaternion\n  },\n];\n\nconst collision_settings = {\n  // This is an example of customized collision_settings\n  dMax: 0.1,\n  r: 0.0,\n  aMax: 2.0,\n  timeBudget: 100,\n  timed: false,\n};\n\nconst newSolver = new Solver(\n  panda,\n  initialObjectives,\n  initialRootBounds,\n  initialEnvShapes,\n  null,\n  null,\n  null,\n  collision_settings\n);\n\nnewSolver.computeAverageDistanceTable();\nconst newState = newSolver.solve({}, {}, 0.0);\n\ndocument.querySelector('#app').innerHTML = `\n  <div>\n   ${JSON.stringify(newState)}\n  </div>`;\n\nconsole.log(newState);\n\n"))),(0,o.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},'from lively import Solver, SmoothnessMacroObjective\n\n# Instantiate a new solver\nsolver = Solver(\n  urdf=\'<?xml version="1.0" ?><robot name="panda">...</robot>\', # Full urdf as a string\n  objectives={\n      # An example objective (smoothness macro)\n      "smoothness":SmoothnessMacroObjective(name="MySmoothnessObjective",weight=5)\n  }\n)\n\n# Run solve to get a solved state\nstate = solver.solve({},{},0.0)\n# Log the initial state\nprint(state)\n'))),(0,o.kt)(i.Z,{value:"rs",label:"Rust",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'use lively::lively::Solver;\nuse lively::objectives::core::base::SmoothnessMacroObjective;\nuse lively::objectives::objective::Objective;\nuse std::collections::HashMap;\n\n// Create a map of objectives\nlet mut objectives: HashMap<String,Objective> = HashMap::new();\n// Add a Smoothness Macro Objective\nobjectives.insert(\n  "smoothness".into(),\n  // An example objective (smoothness macro)\n  Objective::SmoothnessMacro(SmoothnessMacroObjective::new("MySmoothnessObjective",5.0))\n);\n\n// Instantiate a new solver struct\nlet mut solver = Solver::new(\n  urdf:\'<?xml version="1.0" ?><robot name="panda">...</robot>\', // Full urdf as a string\n  objectives\n);\n\n// Run solve to get a solved state\nlet state = solver.solve(\n  HashMap::new(),\n  HashMap::new(),\n  0.0,\n  None\n);\n// Log the initial state\nprintln!("{:?}",state);\n')))))}p.isMDXComponent=!0}}]);