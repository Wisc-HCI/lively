"use strict";(self.webpackChunklively_documentation=self.webpackChunklively_documentation||[]).push([[7066],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return a?n.createElement(g,o(o({ref:t},p),{},{components:a})):n.createElement(g,o({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(83117),r=a(67294),l=a(86010),o=a(12466),i=a(16550),s=a(91980),u=a(67392),p=a(50012);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,u]=g({queryString:a,groupId:n}),[c,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),v=(()=>{const e=s??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,l]),tabValues:l}}var v=a(72389);const k="tabList__CuJ",y="tabItem_LNqP";function f(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==i&&(c(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",y,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function h(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function T(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",k)},r.createElement(f,(0,n.Z)({},e,t)),r.createElement(h,(0,n.Z)({},e,t)))}function N(e){const t=(0,v.Z)();return r.createElement(T,(0,n.Z)({key:String(t)},e))}},49823:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var n=a(83117),r=(a(67294),a(3905)),l=a(74866),o=a(85162);const i={id:"goal"},s="Goals",u={unversionedId:"API/Goals/goal",id:"API/Goals/goal",title:"Goals",description:'There are a variety of different "goal" types that can be provided. Think of these as settings that you would like to achieve (e.g. a PositionMatch objective accepts a Translation goal).',source:"@site/docs/API/Goals/goal.mdx",sourceDirName:"API/Goals",slug:"/API/Goals/goal",permalink:"/lively/docs/API/Goals/goal",draft:!1,tags:[],version:"current",frontMatter:{id:"goal"},sidebar:"docs",previous:{title:"State",permalink:"/lively/docs/API/state"},next:{title:"Info",permalink:"/lively/docs/API/Info/"}},p={},c=[{value:"Translation",id:"translation",level:2},{value:"Rotation",id:"rotation",level:2},{value:"Scalar",id:"scalar",level:2},{value:"Size",id:"size",level:2},{value:"Ellipse",id:"ellipse",level:2},{value:"RotationRange",id:"rotationrange",level:2},{value:"ScalarRange",id:"scalarrange",level:2},{value:"Import",id:"import",level:2}],m={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"goals"},"Goals"),(0,r.kt)("p",null,'There are a variety of different "goal" types that can be provided. Think of these as settings that you would like to achieve (e.g. a ',(0,r.kt)("a",{parentName:"p",href:"../Objectives/matching"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionMatch"))," objective accepts a ",(0,r.kt)("inlineCode",{parentName:"p"},"Translation")," goal). "),(0,r.kt)("h2",{id:"translation"},"Translation"),(0,r.kt)("p",null,"A 3-vector representing coordinates that is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/matching"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionMatch")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/mirroring"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionMirroring"))," objectives."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {Translation:[1.0,0.0,0.5]}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = Translation(x:1.0,y:0.0,z:0.5);\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let goal = Translation3::new(0.0,0.0,0.0);\n")))),(0,r.kt)("h2",{id:"rotation"},"Rotation"),(0,r.kt)("p",null,"A Quaternion representing rotation that is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/matching"},(0,r.kt)("inlineCode",{parentName:"a"},"OrientationMatch")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/mirroring"},(0,r.kt)("inlineCode",{parentName:"a"},"OrientationMirroring"))," objectives."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {Rotation:[0.707,0.0,0.0,0.707]} // [x, y, z, w] ordering\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = Rotation(w:0.707,x:0.0,y:0.0,z:0.707)\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let goal = UnitQuaternion::from_quaternion(Quaternion::new(0.0,0.0,-0.7069999677447771,0.7072135784958345));\n")))),(0,r.kt)("h2",{id:"scalar"},"Scalar"),(0,r.kt)("p",null,"A float value that is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/matching"},(0,r.kt)("inlineCode",{parentName:"a"},"JointMatch")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/mirroring"},(0,r.kt)("inlineCode",{parentName:"a"},"JointMirroring")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/matching"},(0,r.kt)("inlineCode",{parentName:"a"},"DistanceMatch")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/liveliness"},(0,r.kt)("inlineCode",{parentName:"a"},"JointLiveliness")),", and ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/liveliness"},(0,r.kt)("inlineCode",{parentName:"a"},"RelativeMotionLiveliness"))," objectives."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {Scalar:0.5}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = 0.5\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let goal = 0.5;\n")))),(0,r.kt)("h2",{id:"size"},"Size"),(0,r.kt)("p",null,"A 3-vector representing scale of a 3D shape that is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/liveliness"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionLiveliness")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/liveliness"},(0,r.kt)("inlineCode",{parentName:"a"},"OrientationLiveliness")),", ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/liveliness"},(0,r.kt)("inlineCode",{parentName:"a"},"OriginPositionLiveliness"))," objectives."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {Size:[1.0,0.1,0.5]}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = Size(x:1.0,y:0.1,z:0.5)\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let goal = Vector3::new(1.0,0.1,0.5);\n")))),(0,r.kt)("h2",{id:"ellipse"},"Ellipse"),(0,r.kt)("p",null,"A structure designating a rotated ellipsoid, with ",(0,r.kt)("inlineCode",{parentName:"p"},"Translation"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Rotation"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Size")," components. The ",(0,r.kt)("inlineCode",{parentName:"p"},"ellipse")," goal is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/bounding"},(0,r.kt)("inlineCode",{parentName:"a"},"PositionBounding"))," objective."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {Ellipse: {\n  pose: {translation: [1.0,0.0,0.4], rotation: [0.707,0.0,0.0,0.707]}, // [x, y, z, w] ordering for quaternion\n  size: [0.1,0.1,0.2]}}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = Ellipse(\n  translation=Translation(x:1.0,y:0.0,z:0.4),\n  rotation=Rotation(w:0.707,x:0.0,y:0.0,z:0.707),\n  size=Size(x:0.1,y:0.1,z:0.2)\n)\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let pose = Isometry3::from_parts(\n          Translation3::new(\n              0.0,\n              0.0,\n              0.0,\n          ),\n          UnitQuaternion::from_quaternion(Quaternion::new(\n              0.0,\n              0.0,\n              -0.7069999677447771,\n              0.7072135784958345,\n          )),\n      );\nlet goal = Ellipse::new(pose, Vector3::new(0.1,0.1,0.2));\n")))),(0,r.kt)("h2",{id:"rotationrange"},"RotationRange"),(0,r.kt)("p",null,"A structure including a center ",(0,r.kt)("inlineCode",{parentName:"p"},"Rotation"),", as well as a float value indicating allowed delta in radians from that rotation. The ",(0,r.kt)("inlineCode",{parentName:"p"},"RotationRange")," goal is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/bounding"},(0,r.kt)("inlineCode",{parentName:"a"},"RotationBounding"))," objective."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {RotationRange: {rotation: [0.707,0.0,0.0,0.707], // [x, y, z, w] ordering for quaternion\n                            delta:0.4}}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = RotationRange(rotation=Rotation(w:0.707,x:0.0,y:0.0,z:0.707),delta=0.4)\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let rotation = (\n          UnitQuaternion::from_quaternion(Quaternion::new(\n              0.0,\n              0.0,\n              -0.7069999677447771,\n              0.7072135784958345,\n          )),\n      );\nlet goal = RotationRange::new(rotation,0.4);\n")))),(0,r.kt)("h2",{id:"scalarrange"},"ScalarRange"),(0,r.kt)("p",null,"A structure including a center float value, and float value representing allowed delta from that value. The ",(0,r.kt)("inlineCode",{parentName:"p"},"ScalarRange")," goal is used by the ",(0,r.kt)("a",{parentName:"p",href:"../Objectives/bounding"},(0,r.kt)("inlineCode",{parentName:"a"},"JointBounding"))," objective."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let goal = {ScalarRange: {value:0.0,delta:0.4}}\n"))),(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"goal = ScalarRange(value=0.0,delta=0.4)\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"let goal = ScalarRange::new(0.0,0.4);\n")))),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There is no need to import for Javascript.")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"from lively import Translation #Rotation, Scalar, Size, Ellipse, RotationRange, ScalarRange\n"))),(0,r.kt)(o.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use lively::utils::goals::Goal;\n")))))}d.isMDXComponent=!0}}]);