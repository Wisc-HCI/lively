"use strict";(self.webpackChunklively_documentation=self.webpackChunklively_documentation||[]).push([[4394],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,h=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={},o="Solving",i={unversionedId:"API/Solver/Methods/solve",id:"API/Solver/Methods/solve",title:"Solving",description:"The Solver class has a solve method that represents the core functionality of the Lively interface. At a high level, it returns a fully-filled state object and accepts the following fields:",source:"@site/docs/API/Solver/Methods/solve.mdx",sourceDirName:"API/Solver/Methods",slug:"/API/Solver/Methods/solve",permalink:"/docs/API/Solver/Methods/solve",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Methods",permalink:"/docs/category/methods"},next:{title:"Resetting",permalink:"/docs/API/Solver/Methods/reset"}},p={},s=[],d={toc:s};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"solving"},"Solving"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Solver")," class has a ",(0,r.kt)("inlineCode",{parentName:"p"},"solve")," method that represents the core functionality of the Lively interface. At a high level, it returns a fully-filled ",(0,r.kt)("a",{parentName:"p",href:"../../state"},(0,r.kt)("inlineCode",{parentName:"a"},"state"))," object and accepts the following fields:"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("strong",{parentName:"p"},"optional")," field can be left empty if the no specification is needed. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Solver")," will just use the default values for the optional parameters.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"goals")),(0,r.kt)("td",{parentName:"tr",align:null},"a look-up table of <string,",(0,r.kt)("a",{parentName:"td",href:"../../Goals/goal"},(0,r.kt)("inlineCode",{parentName:"a"},"goal")),"> key-value pairs"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"The key of the look-up table should match with that of the ",(0,r.kt)("a",{parentName:"td",href:"../../Objectives"},(0,r.kt)("inlineCode",{parentName:"a"},"objectives"))," to which the ",(0,r.kt)("inlineCode",{parentName:"td"},"goals")," are corresponded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"weights")),(0,r.kt)("td",{parentName:"tr",align:null},"A look-up table of <string,floats>"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"The key of the look-up table should match with that of the ",(0,r.kt)("a",{parentName:"td",href:"../../Objectives"},(0,r.kt)("inlineCode",{parentName:"a"},"objectives"))," to which the weights are corresponded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"time")),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"The current time. If no liveliness ",(0,r.kt)("a",{parentName:"td",href:"../../Objectives"},(0,r.kt)("inlineCode",{parentName:"a"},"objectives"))," are used, this has no effect.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shapes")),(0,r.kt)("td",{parentName:"tr",align:null},"list of ",(0,r.kt)("a",{parentName:"td",href:"../../shapes"},(0,r.kt)("inlineCode",{parentName:"a"},"shape"))," objects"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The list of environmental shapes that should be considered in ",(0,r.kt)("inlineCode",{parentName:"td"},"solve"),".")))))}c.isMDXComponent=!0}}]);